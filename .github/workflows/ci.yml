name: ci
on: [push, pull_request]
jobs:
  lint:
    name: ${{ matrix.component }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        component: [clippy]
        include:
          - component: rustfmt
            cargo_cmd: fmt -- --check
            os: ubuntu-latest
          - component: clippy
            cargo_cmd: clippy --all-targets -- -D warnings -A clippy::type_complexity -A clippy::new-without-default
    steps:
      - name: Clone repository
        uses: actions/checkout@v1

      - name: Install rust
        uses: ./.github/actions/rust-toolchain
        with:
          components: ${{ matrix.component }}

      - name: Check
        run: cargo ${{ matrix.cargo_cmd }}

  test:
    name: test ${{ matrix.os }} rust ${{ matrix.rustc || 'stable' }} ${{ matrix.extra_desc }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.allow_failure || false }}
    timeout-minutes: 30
    strategy:
      matrix:
        include:
          - os: ubuntu-16.04
            rustc: 1.43.0 # Oldest supported version, keep in sync with README.md
          - os: ubuntu-16.04
            rustc: stable
          - os: ubuntu-16.04
            rustc: beta
          - os: ubuntu-16.04
            rustc: nightly
            allow_failure: true
          - os: macOS-10.15
          - os: windows-2019
    env:
      RUST_BACKTRACE: 1
    steps:
      - name: Clone repository
        uses: actions/checkout@v1

      - name: Install rust
        uses: ./.github/actions/rust-toolchain
        with:
          toolchain: ${{ matrix.rustc }}

      - name: Build tests
        run: cargo test --no-run --all-targets --verbose ${{ matrix.extra_args }}

      - name: Run tests
        run: cargo test --all-targets --verbose ${{ matrix.extra_args }}
